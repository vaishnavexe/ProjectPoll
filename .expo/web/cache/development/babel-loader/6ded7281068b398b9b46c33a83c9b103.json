{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar range = function range(from, to) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var i = from;\n  var range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nexport var Paginations = function Paginations(props) {\n  var Records = props.Records,\n      pLimit = props.pLimit,\n      pageNeighbours = props.pageNeighbours,\n      onPageChanged = props.onPageChanged,\n      currentPage = props.currentPage;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalPages = _useState2[0],\n      setTotalPages = _useState2[1];\n\n  useEffect(function () {\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\n  }, [setTotalPages]);\n\n  var fetchPageNumbers = function fetchPageNumbers() {\n    var totalNumbers = pageNeighbours * 2 + 3;\n    var totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      var startPage = Math.max(2, currentPage - pageNeighbours);\n      var endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      var _pages = range(startPage, endPage);\n\n      var hasLeftSpill = startPage > 2;\n      var hasRightSpill = totalPages - endPage > 1;\n      var spillOffset = totalNumbers - (_pages.length + 1);\n\n      switch (true) {\n        case hasLeftSpill && !hasRightSpill:\n          {\n            var extraPages = range(startPage - spillOffset, startPage - 1);\n            _pages = _toConsumableArray(extraPages);\n            break;\n          }\n\n        case hasLeftSpill && hasRightSpill:\n        default:\n          {\n            _pages = _toConsumableArray(_pages);\n            break;\n          }\n      }\n\n      return [1].concat(_toConsumableArray(_pages), [totalPages]);\n    }\n\n    return range(1, totalPages);\n  };\n\n  var pages = fetchPageNumbers() || [];\n  return _jsx(View, {\n    style: styles.scrollViewContainer,\n    children: _jsx(ScrollView, {\n      horizontal: true,\n      contentContainerStyle: styles.scrollViewStyle,\n      children: pages.map(function (page, index) {\n        return _jsx(View, {\n          style: [styles.paginationPages, {\n            backgroundColor: currentPage === page ? \"#a1d1f150\" : undefined\n          }],\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress(e) {\n              console.log('got clicked', page);\n              onPageChanged(e, page);\n            },\n            children: _jsx(Text, {\n              style: styles.paginationPagesText,\n              children: page\n            })\n          })\n        }, index);\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  scrollViewStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlignVertical: 'center',\n    flexDirection: 'row',\n    paddingVertical: 20,\n    marginHorizontal: 20\n  },\n  scrollViewContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlignVertical: 'center'\n  },\n  paginationPages: {\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n    marginHorizontal: 10,\n    borderRadius: 50\n  },\n  paginationPagesText: {\n    fontSize: 15,\n    color: '#1b2a69',\n    fontWeight: 'bold'\n  }\n});\nexport default Paginations;","map":{"version":3,"names":["useState","useEffect","range","from","to","step","i","push","Paginations","props","Records","pLimit","pageNeighbours","onPageChanged","currentPage","totalPages","setTotalPages","Math","ceil","totalRecords","pageLimit","fetchPageNumbers","totalNumbers","totalBlocks","startPage","max","endPage","min","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","styles","scrollViewContainer","scrollViewStyle","map","page","index","paginationPages","backgroundColor","undefined","e","console","log","paginationPagesText","StyleSheet","create","justifyContent","alignItems","textAlignVertical","flexDirection","paddingVertical","marginHorizontal","flex","paddingHorizontal","borderRadius","fontSize","color","fontWeight"],"sources":["C:/Users/vaish/Apps/projectpolling/components/Paginations.tsx"],"sourcesContent":["import { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native'\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst range = (from:number, to:number, step = 1) => {\r\n    let i = from;\r\n    const range = [];\r\n\r\n    while (i <= to) {\r\n        range.push(i);\r\n        i += step;\r\n    }\r\n\r\n    return range;\r\n};\r\n\r\nexport const Paginations = (props)  => { \r\n    const {\r\n        Records,\r\n        pLimit,\r\n        pageNeighbours,\r\n        onPageChanged,\r\n        currentPage\r\n    } = props;\r\n\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(totalRecords / pageLimit));\r\n    }, [setTotalPages]);\r\n\r\n    const fetchPageNumbers = () => {\r\n        const totalNumbers = pageNeighbours * 2 + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n\r\n        if (totalPages > totalBlocks) {\r\n            const startPage = Math.max(2, currentPage - pageNeighbours);\r\n            const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n\r\n            let pages = range(startPage, endPage);\r\n\r\n            const hasLeftSpill = startPage > 2;\r\n            const hasRightSpill = totalPages - endPage > 1;\r\n            const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n            switch (true) {\r\n                case hasLeftSpill && !hasRightSpill: {\r\n                    const extraPages = range(startPage - spillOffset, startPage - 1);\r\n                    pages = [...extraPages];\r\n                    break;\r\n                }\r\n                case hasLeftSpill && hasRightSpill:\r\n                default: {\r\n                    pages = [...pages];\r\n                    break;\r\n                }\r\n            }\r\n            return [1, ...pages, totalPages];\r\n        }\r\n        return range(1, totalPages);\r\n    };\r\n\r\n    const pages = fetchPageNumbers() || [];\r\n\r\n    return (\r\n        <View style={styles.scrollViewContainer}>\r\n            <ScrollView\r\n                horizontal\r\n                contentContainerStyle={styles.scrollViewStyle}>\r\n                {pages.map((page, index) => {\r\n                return (\r\n                    <View\r\n                     style={[styles.paginationPages, { backgroundColor: currentPage === page ? \"#a1d1f150\" : undefined }]}\r\n                     key={index}>\r\n                    <TouchableOpacity\r\n                        onPress={(e) => {\r\n                        console.log('got clicked', page);\r\n                        onPageChanged(e, page)\r\n                        }}>\r\n                        <Text style={styles.paginationPagesText} >{page}</Text>\r\n                    </TouchableOpacity>\r\n                    </View>\r\n                    );\r\n                })}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollViewStyle: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlignVertical: 'center',\r\n        flexDirection: 'row',\r\n        paddingVertical: 20,\r\n        marginHorizontal: 20\r\n    },\r\n    scrollViewContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlignVertical: 'center',\r\n    },\r\n    paginationPages: {\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 5,\r\n        marginHorizontal: 10,\r\n        borderRadius: 50,\r\n    },\r\n    paginationPagesText: {\r\n        fontSize: 15,\r\n        color: '#1b2a69',\r\n        fontWeight: 'bold'\r\n    }\r\n})\r\n\r\nexport default Paginations;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}